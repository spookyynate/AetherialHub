-- Ensure Drawing API is available
local function API_Check()
    local success, result = pcall(function()
        return Drawing ~= nil
    end)
    return success and result
end

local Find_Required = API_Check()

if not Find_Required then
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "Aetherial Hub";
        Text = "Script could not load because Drawing API is not available.";
        Duration = math.huge;
        Button1 = "OK"
    })
    return
end

-- Initialize default keybind and TracersEnabled
_G.DisableKey = Enum.KeyCode.Unknown
local TracersEnabled = true
local UserInputService = game:GetService("UserInputService")

-- Key Press Detection
local function onInputBegan(input)
    if input.KeyCode == _G.DisableKey then
        TracersEnabled = not TracersEnabled
        local status = TracersEnabled and "enabled" or "disabled"
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Title = "Aetherial Hub";
            Text = "Tracers " .. status .. ".";
            Duration = 5;
        })
        -- Update ESP visibility here if necessary
        if espObject then
            espObject.Visible = TracersEnabled
        end
    end
end

UserInputService.InputBegan:Connect(onInputBegan)

-- Chat Command Handler
Players.LocalPlayer.Chatted:Connect(function(message)
    local args = string.split(message, " ")
    local command = args[1]:lower()

    if command == "/keybind" and #args == 2 then
        local keyName = args[2]:upper()
        local newKeybind = Enum.KeyCode[keyName]

        if newKeybind then
            _G.DisableKey = newKeybind
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Aetherial Hub";
                Text = "Disable Keybind changed to " .. tostring(newKeybind);
                Duration = 5;
            })
        else
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Aetherial Hub";
                Text = "Invalid keybind.";
                Duration = 5;
            })
        end
    elseif command == "/color" and #args == 2 then
        local colorArgs = string.split(args[2], ",")
        if #colorArgs == 3 then
            local r = tonumber(colorArgs[1])
            local g = tonumber(colorArgs[2])
            local b = tonumber(colorArgs[3])
            
            if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
                _G.TracerColor = Color3.fromRGB(r, g, b)
                game:GetService("StarterGui"):SetCore("SendNotification",{
                    Title = "Aetherial Hub";
                    Text = "Tracer color changed to (" .. r .. ", " .. g .. ", " .. b .. ")";
                    Duration = 5;
                })
            else
                game:GetService("StarterGui"):SetCore("SendNotification",{
                    Title = "Aetherial Hub";
                    Text = "Invalid color values. Please use format R,G,B with values between 0 and 255.";
                    Duration = 5;
                })
            end
        else
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Aetherial Hub";
                Text = "Invalid color format. Please use format R,G,B.";
                Duration = 5;
            })
        end
    end
end)

-- Function to Create ESP
local function CreateESP()
    -- Ensure ESP is created correctly and assigned to `espObject`
    -- Example of creating an ESP part
    espObject = Instance.new("Part")
    espObject.Size = Vector3.new(1, 1, 1)
    espObject.Anchored = true
    espObject.CanCollide = false
    espObject.BrickColor = BrickColor.new(_G.TracerColor)
    espObject.Parent = game.Workspace
end

CreateESP()
