-- Check if Drawing API is available
local function API_Check()
    if Drawing == nil then
        return "No"
    else
        return "Yes"
    end
end

local Find_Required = API_Check()

if Find_Required == "No" then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Aetherial Hub";
        Text = "Script could not load because of your executor.";
        Duration = math.huge;
        Button1 = "OK"
    })
    return
end

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local GuiService = game:GetService("GuiService")

local Typing = false
local TracersEnabled = true  -- Variable to manage the toggle state

-- Define default settings
local defaultSettings = {
    TracersVisible = true,
    TracerColor = Color3.fromRGB(255, 80, 10),
    TracerThickness = 1,
    TracerTransparency = 0.7,
    ModeSkipKey = Enum.KeyCode.E,
    DisableKey = Enum.KeyCode.Q,
}

_G.SendNotifications = true
_G.DefaultSettings = false
_G.TeamCheck = false
_G.FromMouse = false
_G.FromCenter = false
_G.FromBottom = true
_G.TracersVisible = defaultSettings.TracersVisible
_G.TracerColor = defaultSettings.TracerColor
_G.TracerThickness = defaultSettings.TracerThickness
_G.TracerTransparency = defaultSettings.TracerTransparency
_G.ModeSkipKey = defaultSettings.ModeSkipKey
_G.DisableKey = defaultSettings.DisableKey

-- Create the GUI
local screenGui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local textBox = Instance.new("TextBox")
local applyButton = Instance.new("TextButton")

screenGui.Name = "AetherialHubGUI"
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

frame.Size = UDim2.new(0, 300, 0, 200)
frame.Position = UDim2.new(0.5, -150, 0.5, -100)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.Parent = screenGui

textBox.Size = UDim2.new(0, 200, 0, 50)
textBox.Position = UDim2.new(0.5, -100, 0.2, 0)
textBox.Text = "Press Key..."
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
textBox.Parent = frame

applyButton.Size = UDim2.new(0, 100, 0, 50)
applyButton.Position = UDim2.new(0.5, -50, 0.7, 0)
applyButton.Text = "Apply"
applyButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
applyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
applyButton.Parent = frame

-- Function to handle key input
local function onInput(input)
    if input.KeyCode then
        textBox.Text = input.KeyCode.Name
        return Enum.KeyCode[input.KeyCode.Name]
    end
end

-- Function to apply the new key settings
local function applyKeySettings()
    local key = Enum.KeyCode[textBox.Text]
    if key then
        _G.ModeSkipKey = key
        _G.DisableKey = key
        StarterGui:SetCore("SendNotification", {
            Title = "Aetherial Hub",
            Text = "Key bindings updated to: " .. textBox.Text,
            Duration = 5,
        })
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Aetherial Hub",
            Text = "Invalid key. Please enter a valid key.",
            Duration = 5,
        })
    end
end

-- Connect input events
UserInputService.InputBegan:Connect(onInput)
applyButton.MouseButton1Click:Connect(applyKeySettings)

local function CreateTracers()
    -- ... (existing tracer code)
end

UserInputService.TextBoxFocused:Connect(function()
    Typing = true
end)

UserInputService.TextBoxFocusReleased:Connect(function()
    Typing = false
end)

UserInputService.InputBegan:Connect(function(Input)
    if Input.KeyCode == _G.DisableKey and Typing == false then
        _G.TracersVisible = not _G.TracersVisible
        
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "Aetherial Hub";
                Text = "The tracers' visibility is now set to " .. tostring(_G.TracersVisible) .. ".";
                Duration = 5;
            })
        end
    end
end)

local Success, Errored = pcall(function()
    CreateTracers()
end)

if Success and not Errored then
    if _G.SendNotifications then
        StarterGui:SetCore("SendNotification", {
            Title = "Aetherial Hub";
            Text = "Tracer script has successfully loaded.";
            Duration = 5;
        })
    end
elseif Errored and not Success then
    if _G.SendNotifications then
        StarterGui:SetCore("SendNotification", {
            Title = "Aetherial Hub";
            Text = "Tracer script has errored while loading, please check the developer console! (F9)";
            Duration = 5;
        })
    end
    warn(Errored)
end
