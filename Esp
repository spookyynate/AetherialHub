-- Function to get the local player's display name
local function getDisplayName()
    return game.Players.LocalPlayer.DisplayName
end

-- Check if Drawing API is available
local function API_Check()
    local success, result = pcall(function()
        return Drawing ~= nil
    end)
    return success and result
end

local Find_Required = API_Check()

if not Find_Required then
    local displayName = getDisplayName()
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "Aetherial Hub";
        Text = "Script could not load because Drawing API is not available for user: " .. displayName;
        Duration = math.huge;
        Button1 = "OK"
    })

    return
end

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")

local Typing = false
local TracersEnabled = true  -- Variable to manage the toggle state

_G.SendNotifications = true   -- If set to true then the script would notify you frequently on any changes applied and when loaded / errored. (If a game can detect this, it is recommended to set it to false)
_G.DefaultSettings = false   -- If set to true then the tracer script would run with default settings regardless of any changes you made.

_G.TeamCheck = false   -- If set to true then the script would create tracers only for the enemy team members.

--[!]-- ONLY ONE OF THESE VALUES SHOULD BE SET TO TRUE TO NOT ERROR THE SCRIPT --[!]--

_G.FromMouse = false   -- If set to true, the tracers will come from the position of your mouse cursor on your screen.
_G.FromCenter = false   -- If set to true, the tracers will come from the center of your screen.
_G.FromBottom = true   -- If set to true, the tracers will come from the bottom of your screen.

_G.TracersVisible = true   -- If set to true then the tracers will be visible and vice versa.
_G.TracerColor = Color3.fromRGB(255, 80, 10)   -- The color that the tracers would appear as.
_G.TracerThickness = 1   -- The thickness of the tracers.
_G.TracerTransparency = 0.7   -- The transparency of the tracers.

_G.ModeSkipKey = Enum.KeyCode.E   -- The key that changes between modes that indicate where will the tracers come from.
_G.DisableKey = Enum.KeyCode.Q   -- The key that disables / enables the tracers.

local SkeletonColor = Color3.fromRGB(128, 0, 128)  -- Purple color for the skeleton

local function CreateSkeleton(Character)
    local Head = Character:FindFirstChild("Head")
    local HRP = Character:FindFirstChild("HumanoidRootPart")

    if Head and HRP then
        local HeadPos, HeadOnScreen = Camera:WorldToViewportPoint(Head.Position)
        local HRPPos, HRPOnScreen = Camera:WorldToViewportPoint(HRP.Position)

        -- Head Circle
        local HeadCircle = Drawing.new("Circle")
        HeadCircle.Radius = 10
        HeadCircle.Position = Vector2.new(HeadPos.X, HeadPos.Y)
        HeadCircle.Color = SkeletonColor
        HeadCircle.Thickness = 2
        HeadCircle.Transparency = 0.5
        HeadCircle.Filled = false

        -- Torso Line
        local TorsoLine = Drawing.new("Line")
        TorsoLine.From = Vector2.new(HeadPos.X, HeadPos.Y + 10)
        TorsoLine.To = Vector2.new(HRPPos.X, HRPPos.Y - 20)
        TorsoLine.Color = SkeletonColor
        TorsoLine.Thickness = 2
        TorsoLine.Transparency = 0.5

        -- Arms Lines
        local LeftArmLine = Drawing.new("Line")
        local RightArmLine = Drawing.new("Line")

        LeftArmLine.From = Vector2.new(HeadPos.X - 15, HeadPos.Y + 10)
        LeftArmLine.To = Vector2.new(HRPPos.X - 20, HRPPos.Y - 20)
        LeftArmLine.Color = SkeletonColor
        LeftArmLine.Thickness = 2
        LeftArmLine.Transparency = 0.5

        RightArmLine.From = Vector2.new(HeadPos.X + 15, HeadPos.Y + 10)
        RightArmLine.To = Vector2.new(HRPPos.X + 20, HRPPos.Y - 20)
        RightArmLine.Color = SkeletonColor
        RightArmLine.Thickness = 2
        RightArmLine.Transparency = 0.5

        -- Legs Lines
        local LeftLegLine = Drawing.new("Line")
        local RightLegLine = Drawing.new("Line")

        LeftLegLine.From = Vector2.new(HRPPos.X - 10, HRPPos.Y + 10)
        LeftLegLine.To = Vector2.new(HRPPos.X - 10, HRPPos.Y + 30)
        LeftLegLine.Color = SkeletonColor
        LeftLegLine.Thickness = 2
        LeftLegLine.Transparency = 0.5

        RightLegLine.From = Vector2.new(HRPPos.X + 10, HRPPos.Y + 10)
        RightLegLine.To = Vector2.new(HRPPos.X + 10, HRPPos.Y + 30)
        RightLegLine.Color = SkeletonColor
        RightLegLine.Thickness = 2
        RightLegLine.Transparency = 0.5

        return {HeadCircle, TorsoLine, LeftArmLine, RightArmLine, LeftLegLine, RightLegLine}
    end
end

local function CreateESP()
    for _, v in next, Players:GetPlayers() do
        if v.Name ~= game.Players.LocalPlayer.Name then
            local SkeletonParts = CreateSkeleton(v.Character or v.CharacterAdded:Wait())

            RunService.RenderStepped:Connect(function()
                if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    local HRPPos, HRPOnScreen = Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local HeadPos, HeadOnScreen = Camera:WorldToViewportPoint(v.Character.Head.Position)

                    for _, part in ipairs(SkeletonParts) do
                        part.Visible = HRPOnScreen and HeadOnScreen and TracersEnabled
                    end
                else
                    for _, part in ipairs(SkeletonParts) do
                        part.Visible = false
                    end
                end
            end)

            Players.PlayerRemoving:Connect(function()
                for _, part in ipairs(SkeletonParts) do
                    part.Visible = false
                end
            end)
        end
    end

    Players.PlayerAdded:Connect(function(Player)
        Player.CharacterAdded:Connect(function(v)
            if v.Name ~= game.Players.LocalPlayer.Name then
                local SkeletonParts = CreateSkeleton(v.Character or v.CharacterAdded:Wait())

                RunService.RenderStepped:Connect(function()
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        local HRPPos, HRPOnScreen = Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                        local HeadPos, HeadOnScreen = Camera:WorldToViewportPoint(v.Character.Head.Position)

                        for _, part in ipairs(SkeletonParts) do
                            part.Visible = HRPOnScreen and HeadOnScreen and TracersEnabled
                        end
                    else
                        for _, part in ipairs(SkeletonParts) do
                            part.Visible = false
                        end
                    end
                end)

                Players.PlayerRemoving:Connect(function()
                    for _, part in ipairs(SkeletonParts) do
                        part.Visible = false
                    end
                end)
            end
        end)
    end)
end

CreateESP()

-- Key bindings to manage ESP toggle and settings
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == _G.DisableKey then
        TracersEnabled = not TracersEnabled
    end
end)
