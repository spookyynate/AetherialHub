-- Ensure Drawing API is available
local function API_Check()
    return Drawing and "Yes" or "No"
end

local Find_Required = API_Check()

if Find_Required == "No" then
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "Exunys Developer";
        Text = "Tracer script could not be loaded because your exploit is unsupported.";
        Duration = math.huge;
        Button1 = "OK"
    })
    return
end

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")

local Typing = false
local TracersEnabled = true

_G.SendNotifications = true
_G.TracersVisible = true
_G.TracerColor = Color3.fromRGB(255, 80, 10)
_G.TracerThickness = 1
_G.TracerTransparency = 0.7
_G.FromMouse = false
_G.FromCenter = false
_G.FromBottom = true
_G.TeamCheck = false

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Aetherial Hub"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 150)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, 0, 0, 40)
TitleLabel.BackgroundColor3 = Color3.fromRGB(50, 0, 50)
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.Text = "Aetherial Hub"
TitleLabel.TextScaled = true
TitleLabel.Parent = MainFrame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(1, 0, 0, 60)
ToggleButton.Position = UDim2.new(0, 0, 0.2, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 0, 100)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Text = "Toggle Tracers"
ToggleButton.TextScaled = true
ToggleButton.Parent = MainFrame

ToggleButton.MouseButton1Click:Connect(function()
    TracersEnabled = not TracersEnabled
    _G.TracersVisible = TracersEnabled

    if _G.SendNotifications then
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Title = "Aetherial Hub";
            Text = "Tracers visibility is now set to " .. tostring(_G.TracersVisible) .. ".";
            Duration = 5;
        })
    end
end)

local function CreateTracers()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            local TracerLine = Drawing.new("Line")

            RunService.RenderStepped:Connect(function()
                if workspace:FindFirstChild(player.Name) and workspace[player.Name]:FindFirstChild("HumanoidRootPart") then
                    local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[player.Name].HumanoidRootPart.CFrame, workspace[player.Name].HumanoidRootPart.Size * 1
                    local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p)
                    
                    TracerLine.Thickness = _G.TracerThickness
                    TracerLine.Transparency = _G.TracerTransparency
                    TracerLine.Color = _G.TracerColor

                    if _G.FromMouse and not _G.FromCenter and not _G.FromBottom then
                        TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                    elseif not _G.FromMouse and _G.FromCenter and not _G.FromBottom then
                        TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                    elseif not _G.FromMouse and not _G.FromCenter and _G.FromBottom then
                        TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    end

                    if OnScreen then
                        TracerLine.To = Vector2.new(Vector.X, Vector.Y)
                        if _G.TeamCheck then
                            TracerLine.Visible = (Players.LocalPlayer.Team ~= player.Team) and TracersEnabled
                        else
                            TracerLine.Visible = TracersEnabled
                        end
                    else
                        TracerLine.Visible = false
                    end
                else
                    TracerLine.Visible = false
                end
            end)

            Players.PlayerRemoving:Connect(function()
                TracerLine.Visible = false
            end)
        end
    end

    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            if player.Name ~= game.Players.LocalPlayer.Name then
                local TracerLine = Drawing.new("Line")
        
                RunService.RenderStepped:Connect(function()
                    if workspace:FindFirstChild(player.Name) and workspace[player.Name]:FindFirstChild("HumanoidRootPart") then
                        local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[player.Name].HumanoidRootPart.CFrame, workspace[player.Name].HumanoidRootPart.Size * 1
                        local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p)
                        
                        TracerLine.Thickness = _G.TracerThickness
                        TracerLine.Transparency = _G.TracerTransparency
                        TracerLine.Color = _G.TracerColor

                        if _G.FromMouse and not _G.FromCenter and not _G.FromBottom then
                            TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                        elseif not _G.FromMouse and _G.FromCenter and not _G.FromBottom then
                            TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                        elseif not _G.FromMouse and not _G.FromCenter and _G.FromBottom then
                            TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                        end

                        if OnScreen then
                            TracerLine.To = Vector2.new(Vector.X, Vector.Y)
                            if _G.TeamCheck then
                                TracerLine.Visible = (Players.LocalPlayer.Team ~= player.Team) and TracersEnabled
                            else
                                TracerLine.Visible = TracersEnabled
                            end
                        else
                            TracerLine.Visible = false
                        end
                    else
                        TracerLine.Visible = false
                    end
                end)

                Players.PlayerRemoving:Connect(function()
                    TracerLine.Visible = false
                end)
            end
        end)
    end)
end

CreateTracers()
