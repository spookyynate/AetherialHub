-- Load the Luminosity UI library
local Luminosity = loadstring(game:HttpGet("https://raw.githubusercontent.com/iHavoc101/Genesis-Studios/main/UserInterface/Luminosity.lua", true))()

-- Create a new Luminosity window
local Window = Luminosity.new("Aetherial Hub", "v1.0.0", 4370345701)

-- Create a tab for options
local Tab1 = Window.Tab("ESP Settings", 6026568198)
local Folder = Tab1.Folder("Options", "Control ESP visibility")

-- Add a button to toggle ESP
local TracersEnabled = true

Folder.Button("Toggle Tracers", function()
    TracersEnabled = not TracersEnabled
    _G.TracersVisible = TracersEnabled
    
    -- Notify the user
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Aetherial Hub",
        Text = "Tracers visibility is now " .. (TracersEnabled and "Enabled" or "Disabled"),
        Duration = 5,
    })
end)

-- Initialize Tracer logic
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")

-- Check Drawing API availability
local function API_Check()
    return Drawing and "Yes" or "No"
end

local Find_Required = API_Check()

if Find_Required == "No" then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Exunys Developer",
        Text = "Tracer script could not be loaded because your exploit is unsupported.",
        Duration = math.huge,
        Button1 = "OK"
    })
    return
end

local function CreateTracers()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            local TracerLine = Drawing.new("Line")

            RunService.RenderStepped:Connect(function()
                if workspace:FindFirstChild(player.Name) and workspace[player.Name]:FindFirstChild("HumanoidRootPart") then
                    local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[player.Name].HumanoidRootPart.CFrame, workspace[player.Name].HumanoidRootPart.Size * 1
                    local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p)
                    
                    TracerLine.Thickness = _G.TracerThickness
                    TracerLine.Transparency = _G.TracerTransparency
                    TracerLine.Color = _G.TracerColor

                    if _G.FromMouse and not _G.FromCenter and not _G.FromBottom then
                        TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                    elseif not _G.FromMouse and _G.FromCenter and not _G.FromBottom then
                        TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                    elseif not _G.FromMouse and not _G.FromCenter and _G.FromBottom then
                        TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    end

                    if OnScreen then
                        TracerLine.To = Vector2.new(Vector.X, Vector.Y)
                        if _G.TeamCheck then
                            TracerLine.Visible = (Players.LocalPlayer.Team ~= player.Team) and TracersEnabled
                        else
                            TracerLine.Visible = TracersEnabled
                        end
                    else
                        TracerLine.Visible = false
                    end
                else
                    TracerLine.Visible = false
                end
            end)

            Players.PlayerRemoving:Connect(function()
                TracerLine.Visible = false
            end)
        end
    end

    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            if player.Name ~= game.Players.LocalPlayer.Name then
                local TracerLine = Drawing.new("Line")
        
                RunService.RenderStepped:Connect(function()
                    if workspace:FindFirstChild(player.Name) and workspace[player.Name]:FindFirstChild("HumanoidRootPart") then
                        local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[player.Name].HumanoidRootPart.CFrame, workspace[player.Name].HumanoidRootPart.Size * 1
                        local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p)
                        
                        TracerLine.Thickness = _G.TracerThickness
                        TracerLine.Transparency = _G.TracerTransparency
                        TracerLine.Color = _G.TracerColor

                        if _G.FromMouse and not _G.FromCenter and not _G.FromBottom then
                            TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                        elseif not _G.FromMouse and _G.FromCenter and not _G.FromBottom then
                            TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                        elseif not _G.FromMouse and not _G.FromCenter and _G.FromBottom then
                            TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                        end

                        if OnScreen then
                            TracerLine.To = Vector2.new(Vector.X, Vector.Y)
                            if _G.TeamCheck then
                                TracerLine.Visible = (Players.LocalPlayer.Team ~= player.Team) and TracersEnabled
                            else
                                TracerLine.Visible = TracersEnabled
                            end
                        else
                            TracerLine.Visible = false
                        end
                    else
                        TracerLine.Visible = false
                    end
                end)

                Players.PlayerRemoving:Connect(function()
                    TracerLine.Visible = false
                end)
            end
        end)
    end)
end

CreateTracers()
