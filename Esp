-- Add this at the beginning of your script
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Create the GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = PlayerGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 150)
Frame.Position = UDim2.new(0.8, 0, 0.8, 0)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Parent = ScreenGui

local TracerButton = Instance.new("TextButton")
TracerButton.Size = UDim2.new(0.9, 0, 0.3, 0)
TracerButton.Position = UDim2.new(0.05, 0, 0.05, 0)
TracerButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
TracerButton.Text = "Tracers: ON"
TracerButton.Parent = Frame

local BoxButton = Instance.new("TextButton")
BoxButton.Size = UDim2.new(0.9, 0, 0.3, 0)
BoxButton.Position = UDim2.new(0.05, 0, 0.4, 0)
BoxButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
BoxButton.Text = "Boxes: ON"
BoxButton.Parent = Frame

local OutlineButton = Instance.new("TextButton")
OutlineButton.Size = UDim2.new(0.9, 0, 0.3, 0)
OutlineButton.Position = UDim2.new(0.05, 0, 0.75, 0)
OutlineButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
OutlineButton.Text = "Outlines: ON"
OutlineButton.Parent = Frame

-- Initialize Settings
local Settings = {
    Box_Color = Color3.fromRGB(255, 0, 0),
    Tracer_Color = Color3.fromRGB(255, 0, 0),
    Tracer_Thickness = 1,
    Box_Thickness = 1,
    Tracer_Origin = "Bottom",
    Tracer_FollowMouse = false,
    Tracers = true,
    Outlines = true
}
local Team_Check = {
    TeamCheck = false,
    Green = Color3.fromRGB(0, 255, 0),
    Red = Color3.fromRGB(255, 0, 0)
}
local TeamColor = true

-- Update Button Functionality
TracerButton.MouseButton1Click:Connect(function()
    Settings.Tracers = not Settings.Tracers
    TracerButton.Text = Settings.Tracers and "Tracers: ON" or "Tracers: OFF"
end)

BoxButton.MouseButton1Click:Connect(function()
    Settings.Box = not Settings.Box
    BoxButton.Text = Settings.Box and "Boxes: ON" or "Boxes: OFF"
end)

OutlineButton.MouseButton1Click:Connect(function()
    Settings.Outlines = not Settings.Outlines
    OutlineButton.Text = Settings.Outlines and "Outlines: ON" or "Outlines: OFF"
end)

-- ESP and Outline Functions
local player = game:GetService("Players").LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local mouse = player:GetMouse()

local function NewQuad(thickness, color)
    local quad = Drawing.new("Quad")
    quad.Visible = false
    quad.PointA = Vector2.new(0,0)
    quad.PointB = Vector2.new(0,0)
    quad.PointC = Vector2.new(0,0)
    quad.PointD = Vector2.new(0,0)
    quad.Color = color
    quad.Filled = false
    quad.Thickness = thickness
    quad.Transparency = 1
    return quad
end

local function NewLine(thickness, color)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color 
    line.Thickness = thickness
    line.Transparency = 1
    return line
end

local function Visibility(state, lib)
    for u, x in pairs(lib) do
        x.Visible = state
    end
end

local function ToColor3(col)
    local r = col.r
    local g = col.g
    local b = col.b
    return Color3.new(r,g,b);
end

local black = Color3.fromRGB(0, 0 ,0)
local function ESP(plr)
    local library = {
        blacktracer = NewLine(Settings.Tracer_Thickness*2, black),
        tracer = NewLine(Settings.Tracer_Thickness, Settings.Tracer_Color),
        black = NewQuad(Settings.Box_Thickness*2, black),
        box = NewQuad(Settings.Box_Thickness, Settings.Box_Color),
    }

    local function Colorize(color)
        for u, x in pairs(library) do
            if x ~= library.blacktracer and x ~= library.black then
                x.Color = color
            end
        end
    end

    local function Updater()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
                local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                if OnScreen then
                    local head = camera:WorldToViewportPoint(plr.Character.Head.Position)
                    local DistanceY = math.clamp((Vector2.new(head.X, head.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)
                    
                    local function Size(item)
                        item.PointA = Vector2.new(HumPos.X + DistanceY, HumPos.Y - DistanceY*2)
                        item.PointB = Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2)
                        item.PointC = Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)
                        item.PointD = Vector2.new(HumPos.X + DistanceY, HumPos.Y + DistanceY*2)
                    end
                    Size(library.box)
                    Size(library.black)

                    if Settings.Tracers then
                        if Settings.Tracer_Origin == "Middle" then
                            library.tracer.From = camera.ViewportSize*0.5
                            library.blacktracer.From = camera.ViewportSize*0.5
                        elseif Settings.Tracer_Origin == "Bottom" then
                            library.tracer.From = Vector2.new(camera.ViewportSize.X*0.5, camera.ViewportSize.Y) 
                            library.blacktracer.From = Vector2.new(camera.ViewportSize.X*0.5, camera.ViewportSize.Y)
                        end
                        if Settings.Tracer_FollowMouse then
                            library.tracer.From = Vector2.new(mouse.X, mouse.Y+36)
                            library.blacktracer.From = Vector2.new(mouse.X, mouse.Y+36)
                        end
                        library.tracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY*2)
                        library.blacktracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY*2)
                    else 
                        library.tracer.From = Vector2.new(0, 0)
                        library.blacktracer.From = Vector2.new(0, 0)
                        library.tracer.To = Vector2.new(0, 0)
                        library.blacktracer.To = Vector2.new(0, 02)
                    end

                    if Settings.Outlines then
                        AddOutline(plr.Character)
                    else
                        -- Hide outlines if toggled off
                        for _, obj in pairs(Folder:GetChildren()) do
                            if obj:IsA("Highlight") and obj.Adornee == plr.Character then
                                obj:Destroy()
                            end
                        end
                    end

                    if Team_Check.TeamCheck then
                        if plr.TeamColor == player.TeamColor then
                            Colorize(Team_Check.Green)
                        else 
                            Colorize(Team_Check.Red)
                        end
                    else 
                        library.tracer.Color = Settings.Tracer_Color
                        library.box.Color = Settings.Box_Color
                    end
                    if TeamColor == true then
                        Colorize(plr.TeamColor.Color)
                    end
                    Visibility(true, library)
                else 
                    Visibility(false, library)
                end
            else 
                Visibility(false, library)
                if game.Players:FindFirstChild(plr.Name) == nil then
                    connection:Disconnect()
                end
            end
        end)
    end

    Updater()
end

-- Add Outline ESP Function
local function AddOutline(character)
    local folder = Instance.new("Folder")
    folder.Name = "Outlines"
    folder.Parent = character
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            local highlight = Instance.new("Highlight")
            highlight.Adornee = part
            highlight.Parent = folder
            highlight.OutlineColor = Settings.Box_Color
        end
    end
end

-- ESP Usage
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        ESP(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    ESP(player)
end)
